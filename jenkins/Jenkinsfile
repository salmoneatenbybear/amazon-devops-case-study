pipeline {
  agent any
  environment {
    DOCKER_REGISTRY = 'adityasinghlikesjiujitsu'
    IMAGE_NAME = "${DOCKER_REGISTRY}/amazon-devops-app"
    TAG = "latest"
  }
  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/salmoneatenbybear/amazon-devops-case-study.git'
      }
    }
    stage('Build') {
        steps {
            sh '''
            echo üìÇ Listing contents for debug
            ls -la
            ls -la app/

            echo üê≥ Building Docker image with tag: latest
            docker build --no-cache -t ${IMAGE_NAME}:latest app/
            '''
        }
    }
    stage('Test') {
        steps {
            sh '''
            echo üß™ Running test container in background...

            # Stop & remove if already running
            docker rm -f test-app || true

            # Start container with host port forwarding
            docker run -d -p 3000:3000 --name test-app ${IMAGE_NAME}:${TAG}

            echo ‚è≥ Waiting for app to be ready...
            sleep 10

            echo üîç Curling localhost:3000
            if curl -f http://localhost:3000; then
            echo ‚úÖ App responded successfully!
            docker rm -f test-app
            else
            echo ‚ùå App is not responding. Logs:
            docker logs test-app
            docker rm -f test-app
            exit 1
            fi
            '''
        }
    }
    stage('Push') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
          sh '''
          echo üîê Logging in to DockerHub
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

          echo üì§ Pushing image
          docker push ${IMAGE_NAME}:${TAG}
          '''
        }
      }
    }
    stage('Deploy') {
      steps {
        sh 'kubectl apply -f kubernetes/'
      }
    }
  }
}

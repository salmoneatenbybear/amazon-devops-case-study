pipeline {
  agent any
  environment {
    DOCKER_REGISTRY = 'adityasinghlikesjiujitsu'
    IMAGE_NAME = "${DOCKER_REGISTRY}/amazon-devops-app"
    TAG = "latest"
  }
  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/salmoneatenbybear/amazon-devops-case-study.git'
      }
    }
    stage('Build') {
      steps {
        sh '''
        echo 📂 Listing contents for debug
        ls -la
        ls -la app/

        echo 🐳 Building Docker image with tag: $TAG
        docker build -t ${IMAGE_NAME}:${TAG} app/
        '''
      }
    }
    stage('Test') {
      steps {
        sh '''
        echo 🧪 Running test container in background...

        # Stop & remove existing test container if it exists
        docker rm -f test-app || true

        docker run -d -p 3000:3000 --name test-app ${IMAGE_NAME}:${TAG}

        echo ⏳ Waiting for app to be ready...
        sleep 5

        echo 🔍 Curling localhost:3000
        curl -f http://localhost:3000 || {
          docker logs test-app
          exit 1
        }

        docker rm -f test-app
        '''
      }
    }
    stage('Push') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
          sh '''
          echo 🔐 Logging in to DockerHub
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

          echo 📤 Pushing image
          docker push ${IMAGE_NAME}:${TAG}
          '''
        }
      }
    }
    stage('Deploy') {
      steps {
        sh 'kubectl apply -f kubernetes/'
      }
    }
  }
}
